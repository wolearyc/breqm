README
======

BREQM - Boundary Region Embedding Quantum Mechanics/Molecular Mechanics

This software performs BREQM using VASP (for QM) and LAMMPS (for MM). The scripts contained within the main directory drive the calculation. Files used and produced by VASP and LAMMPS are contained within the vasp_run and lammps_run directories; these are called running directories.

Overview
--------
First, the total system should be initialized from a VASP file into an Atoms object. The atoms within the Atoms object can be manipulated through "condition" functions, which are passed into several methods. A condition function takes the coordinates of a single atom and should return True or False, depending on whether the position satisfies some condition.

Using conditions, Atoms can be split, creating a new Atoms object. After calculations, this new Atoms object can be quickly merged back into the total Atoms object. Certain atoms objects can be fixed using condition functions; these fixed are represented in later calculations made using those atoms objects. 

Atoms objects can contain bonding information, which is especially important whenever bonds should be preserved when splitting. Bonding can be updated using the update_bonding method, which takes a cutoff dictionary. This dictionary specifies both bond distance cutoffs and which bonds to focus on. For example, if one only cared about bond information for water molecules, the cutoff dictionary could be {'H-O':1.5}. update_bonds also takes a condition function; this specifies which atoms are included in the bond calculations, providing a very large speed-up for large systems. Typically, the condition function should specify the region in which bonds might break during splitting. 

Proper order of atoms is essential to many parts of these scripts. In essense, the atom and element order specified in the input file is conserved. Because of this, the element order in the input VASP file should be identical to the desired atom order to be used in the LAMMPS calculation.

Interfacing with VASP and LAMMPS
--------------------------------
VASP and LAMMPS are run with PBS. Two scripts, vasp.run and lammps.run, should be present in the running directories. 

For LAMMPS, this tool only writes a data file ('lammps.data') and an input file ('lammps.in'). The data file comes from an Atoms object, but the input file is written by the user in string form. This string should contain two format specifiers at two specific locations. The first specifier should be located when the atom order is specified in the pair_coeff command.
```
pair_coeff      * * lammps.ffield {0}
```
The second specifier should be located on some group that will be frozen later.
```
group           frozen id {1}
```

For VASP, this tool only writes a POSCAR and an INCAR. The POSCAR comes form an Atoms object, but the input file is written by the user in the string form. This string should not contain any format specifiers, since all atom fixing is done using the 'Selective Dynamics' tag within the POSCAR.

Example
-------
An example calculation is included with this distribution and is coded in main.py

